//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MeetingSchedulerModel", "FK_AppointmentResources_Resources", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MeetingScheduler.Web.Resource), "AppointmentResources", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingScheduler.Web.AppointmentResource), true)]
[assembly: EdmRelationshipAttribute("MeetingSchedulerModel", "FK_AppointmentResources_SqlAppointments", "SqlAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MeetingScheduler.Web.SqlAppointment), "AppointmentResources", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingScheduler.Web.AppointmentResource), true)]
[assembly: EdmRelationshipAttribute("MeetingSchedulerModel", "FK_Resources_ResourceTypes", "ResourceTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MeetingScheduler.Web.ResourceType), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingScheduler.Web.Resource), true)]
[assembly: EdmRelationshipAttribute("MeetingSchedulerModel", "FK_UserTeam_Resource", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MeetingScheduler.Web.Resource), "UserTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingScheduler.Web.UserTeam), true)]
[assembly: EdmRelationshipAttribute("MeetingSchedulerModel", "FK_SqlAppointments_SqlAppointments", "SqlAppointments", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MeetingScheduler.Web.SqlAppointment), "SqlAppointments1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MeetingScheduler.Web.SqlAppointment), true)]

#endregion

namespace MeetingScheduler.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MeetingSchedulerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MeetingSchedulerEntities object using the connection string found in the 'MeetingSchedulerEntities' section of the application configuration file.
        /// </summary>
        public MeetingSchedulerEntities() : base("name=MeetingSchedulerEntities", "MeetingSchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MeetingSchedulerEntities object.
        /// </summary>
        public MeetingSchedulerEntities(string connectionString) : base(connectionString, "MeetingSchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MeetingSchedulerEntities object.
        /// </summary>
        public MeetingSchedulerEntities(EntityConnection connection) : base(connection, "MeetingSchedulerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AppointmentResource> AppointmentResources
        {
            get
            {
                if ((_AppointmentResources == null))
                {
                    _AppointmentResources = base.CreateObjectSet<AppointmentResource>("AppointmentResources");
                }
                return _AppointmentResources;
            }
        }
        private ObjectSet<AppointmentResource> _AppointmentResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Resource> Resource
        {
            get
            {
                if ((_Resource == null))
                {
                    _Resource = base.CreateObjectSet<Resource>("Resource");
                }
                return _Resource;
            }
        }
        private ObjectSet<Resource> _Resource;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceType> ResourceTypes
        {
            get
            {
                if ((_ResourceTypes == null))
                {
                    _ResourceTypes = base.CreateObjectSet<ResourceType>("ResourceTypes");
                }
                return _ResourceTypes;
            }
        }
        private ObjectSet<ResourceType> _ResourceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SqlAppointment> SqlAppointments
        {
            get
            {
                if ((_SqlAppointments == null))
                {
                    _SqlAppointments = base.CreateObjectSet<SqlAppointment>("SqlAppointments");
                }
                return _SqlAppointments;
            }
        }
        private ObjectSet<SqlAppointment> _SqlAppointments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserTeam> UserTeam
        {
            get
            {
                if ((_UserTeam == null))
                {
                    _UserTeam = base.CreateObjectSet<UserTeam>("UserTeam");
                }
                return _UserTeam;
            }
        }
        private ObjectSet<UserTeam> _UserTeam;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppointmentResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointmentResources(AppointmentResource appointmentResources)
        {
            base.AddObject("AppointmentResources", appointmentResources);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Resource EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResource(Resource resource)
        {
            base.AddObject("Resource", resource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceTypes(ResourceType resourceTypes)
        {
            base.AddObject("ResourceTypes", resourceTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SqlAppointments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSqlAppointments(SqlAppointment sqlAppointments)
        {
            base.AddObject("SqlAppointments", sqlAppointments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserTeam EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserTeam(UserTeam userTeam)
        {
            base.AddObject("UserTeam", userTeam);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingSchedulerModel", Name="AppointmentResources")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppointmentResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AppointmentResources object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sqlAppointmentId">Initial value of the SqlAppointmentId property.</param>
        /// <param name="resourceId">Initial value of the ResourceId property.</param>
        public static AppointmentResource CreateAppointmentResources(global::System.Int32 id, global::System.Guid sqlAppointmentId, global::System.Int32 resourceId)
        {
            AppointmentResource appointmentResources = new AppointmentResource();
            appointmentResources.Id = id;
            appointmentResources.SqlAppointmentId = sqlAppointmentId;
            appointmentResources.ResourceId = resourceId;
            return appointmentResources;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SqlAppointmentId
        {
            get
            {
                return _SqlAppointmentId;
            }
            set
            {
                OnSqlAppointmentIdChanging(value);
                ReportPropertyChanging("SqlAppointmentId");
                _SqlAppointmentId = StructuralObject.SetValidValue(value, "SqlAppointmentId");
                ReportPropertyChanged("SqlAppointmentId");
                OnSqlAppointmentIdChanged();
            }
        }
        private global::System.Guid _SqlAppointmentId;
        partial void OnSqlAppointmentIdChanging(global::System.Guid value);
        partial void OnSqlAppointmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceId
        {
            get
            {
                return _ResourceId;
            }
            set
            {
                OnResourceIdChanging(value);
                ReportPropertyChanging("ResourceId");
                _ResourceId = StructuralObject.SetValidValue(value, "ResourceId");
                ReportPropertyChanged("ResourceId");
                OnResourceIdChanged();
            }
        }
        private global::System.Int32 _ResourceId;
        partial void OnResourceIdChanging(global::System.Int32 value);
        partial void OnResourceIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingSchedulerModel", "FK_AppointmentResources_Resources", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("MeetingSchedulerModel.FK_AppointmentResources_Resources", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("MeetingSchedulerModel.FK_AppointmentResources_Resources", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("MeetingSchedulerModel.FK_AppointmentResources_Resources", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("MeetingSchedulerModel.FK_AppointmentResources_Resources", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingSchedulerModel", "FK_AppointmentResources_SqlAppointments", "SqlAppointments")]
        public SqlAppointment SqlAppointments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("MeetingSchedulerModel.FK_AppointmentResources_SqlAppointments", "SqlAppointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("MeetingSchedulerModel.FK_AppointmentResources_SqlAppointments", "SqlAppointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SqlAppointment> SqlAppointmentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("MeetingSchedulerModel.FK_AppointmentResources_SqlAppointments", "SqlAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SqlAppointment>("MeetingSchedulerModel.FK_AppointmentResources_SqlAppointments", "SqlAppointments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingSchedulerModel", Name="Resource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Resource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Resource object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="resourceTypeId">Initial value of the ResourceTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Resource CreateResource(global::System.Int32 id, global::System.Int32 resourceTypeId, global::System.String name)
        {
            Resource resource = new Resource();
            resource.Id = id;
            resource.ResourceTypeId = resourceTypeId;
            resource.Name = name;
            return resource;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceTypeId
        {
            get
            {
                return _ResourceTypeId;
            }
            set
            {
                OnResourceTypeIdChanging(value);
                ReportPropertyChanging("ResourceTypeId");
                _ResourceTypeId = StructuralObject.SetValidValue(value, "ResourceTypeId");
                ReportPropertyChanged("ResourceTypeId");
                OnResourceTypeIdChanged();
            }
        }
        private global::System.Int32 _ResourceTypeId;
        partial void OnResourceTypeIdChanging(global::System.Int32 value);
        partial void OnResourceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true, "Color");
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingSchedulerModel", "FK_AppointmentResources_Resources", "AppointmentResources")]
        public EntityCollection<AppointmentResource> AppointmentResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AppointmentResource>("MeetingSchedulerModel.FK_AppointmentResources_Resources", "AppointmentResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AppointmentResource>("MeetingSchedulerModel.FK_AppointmentResources_Resources", "AppointmentResources", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingSchedulerModel", "FK_Resources_ResourceTypes", "ResourceTypes")]
        public ResourceType ResourceTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("MeetingSchedulerModel.FK_Resources_ResourceTypes", "ResourceTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("MeetingSchedulerModel.FK_Resources_ResourceTypes", "ResourceTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceType> ResourceTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("MeetingSchedulerModel.FK_Resources_ResourceTypes", "ResourceTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceType>("MeetingSchedulerModel.FK_Resources_ResourceTypes", "ResourceTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingSchedulerModel", "FK_UserTeam_Resource", "UserTeam")]
        public EntityCollection<UserTeam> UserTeam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTeam>("MeetingSchedulerModel.FK_UserTeam_Resource", "UserTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTeam>("MeetingSchedulerModel.FK_UserTeam_Resource", "UserTeam", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingSchedulerModel", Name="ResourceTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceTypes object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ResourceType CreateResourceTypes(global::System.Int32 id, global::System.String name)
        {
            ResourceType resourceTypes = new ResourceType();
            resourceTypes.Id = id;
            resourceTypes.Name = name;
            return resourceTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AllowMultipleSelection
        {
            get
            {
                return _AllowMultipleSelection;
            }
            set
            {
                OnAllowMultipleSelectionChanging(value);
                ReportPropertyChanging("AllowMultipleSelection");
                _AllowMultipleSelection = StructuralObject.SetValidValue(value, "AllowMultipleSelection");
                ReportPropertyChanged("AllowMultipleSelection");
                OnAllowMultipleSelectionChanged();
            }
        }
        private Nullable<global::System.Boolean> _AllowMultipleSelection;
        partial void OnAllowMultipleSelectionChanging(Nullable<global::System.Boolean> value);
        partial void OnAllowMultipleSelectionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingSchedulerModel", "FK_Resources_ResourceTypes", "Resource")]
        public EntityCollection<Resource> Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("MeetingSchedulerModel.FK_Resources_ResourceTypes", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("MeetingSchedulerModel.FK_Resources_ResourceTypes", "Resource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingSchedulerModel", Name="SqlAppointments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SqlAppointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SqlAppointments object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="end">Initial value of the End property.</param>
        /// <param name="isAllDayEvent">Initial value of the IsAllDayEvent property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static SqlAppointment CreateSqlAppointments(global::System.Guid id, global::System.DateTime start, global::System.DateTime end, global::System.Boolean isAllDayEvent, global::System.Int32 type)
        {
            SqlAppointment sqlAppointments = new SqlAppointment();
            sqlAppointments.Id = id;
            sqlAppointments.Start = start;
            sqlAppointments.End = end;
            sqlAppointments.IsAllDayEvent = isAllDayEvent;
            sqlAppointments.Type = type;
            return sqlAppointments;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true, "Body");
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value, "Start");
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value, "End");
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private global::System.DateTime _End;
        partial void OnEndChanging(global::System.DateTime value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAllDayEvent
        {
            get
            {
                return _IsAllDayEvent;
            }
            set
            {
                OnIsAllDayEventChanging(value);
                ReportPropertyChanging("IsAllDayEvent");
                _IsAllDayEvent = StructuralObject.SetValidValue(value, "IsAllDayEvent");
                ReportPropertyChanged("IsAllDayEvent");
                OnIsAllDayEventChanged();
            }
        }
        private global::System.Boolean _IsAllDayEvent;
        partial void OnIsAllDayEventChanging(global::System.Boolean value);
        partial void OnIsAllDayEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true, "Url");
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecurrencePattern
        {
            get
            {
                return _RecurrencePattern;
            }
            set
            {
                OnRecurrencePatternChanging(value);
                ReportPropertyChanging("RecurrencePattern");
                _RecurrencePattern = StructuralObject.SetValidValue(value, true, "RecurrencePattern");
                ReportPropertyChanged("RecurrencePattern");
                OnRecurrencePatternChanged();
            }
        }
        private global::System.String _RecurrencePattern;
        partial void OnRecurrencePatternChanging(global::System.String value);
        partial void OnRecurrencePatternChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TimeZoneString
        {
            get
            {
                return _TimeZoneString;
            }
            set
            {
                OnTimeZoneStringChanging(value);
                ReportPropertyChanging("TimeZoneString");
                _TimeZoneString = StructuralObject.SetValidValue(value, true, "TimeZoneString");
                ReportPropertyChanged("TimeZoneString");
                OnTimeZoneStringChanged();
            }
        }
        private global::System.String _TimeZoneString;
        partial void OnTimeZoneStringChanging(global::System.String value);
        partial void OnTimeZoneStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value, "ParentId");
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExceptionDate
        {
            get
            {
                return _ExceptionDate;
            }
            set
            {
                OnExceptionDateChanging(value);
                ReportPropertyChanging("ExceptionDate");
                _ExceptionDate = StructuralObject.SetValidValue(value, "ExceptionDate");
                ReportPropertyChanged("ExceptionDate");
                OnExceptionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExceptionDate;
        partial void OnExceptionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExceptionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Importance
        {
            get
            {
                return _Importance;
            }
            set
            {
                OnImportanceChanging(value);
                ReportPropertyChanging("Importance");
                _Importance = StructuralObject.SetValidValue(value, true, "Importance");
                ReportPropertyChanged("Importance");
                OnImportanceChanged();
            }
        }
        private global::System.String _Importance;
        partial void OnImportanceChanging(global::System.String value);
        partial void OnImportanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TimeMarker
        {
            get
            {
                return _TimeMarker;
            }
            set
            {
                OnTimeMarkerChanging(value);
                ReportPropertyChanging("TimeMarker");
                _TimeMarker = StructuralObject.SetValidValue(value, true, "TimeMarker");
                ReportPropertyChanged("TimeMarker");
                OnTimeMarkerChanged();
            }
        }
        private global::System.String _TimeMarker;
        partial void OnTimeMarkerChanging(global::System.String value);
        partial void OnTimeMarkerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true, "Category");
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingSchedulerModel", "FK_AppointmentResources_SqlAppointments", "AppointmentResources")]
        public EntityCollection<AppointmentResource> AppointmentResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AppointmentResource>("MeetingSchedulerModel.FK_AppointmentResources_SqlAppointments", "AppointmentResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AppointmentResource>("MeetingSchedulerModel.FK_AppointmentResources_SqlAppointments", "AppointmentResources", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingSchedulerModel", "FK_SqlAppointments_SqlAppointments", "SqlAppointments1")]
        public EntityCollection<SqlAppointment> SqlAppointments1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SqlAppointment>("MeetingSchedulerModel.FK_SqlAppointments_SqlAppointments", "SqlAppointments1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SqlAppointment>("MeetingSchedulerModel.FK_SqlAppointments_SqlAppointments", "SqlAppointments1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingSchedulerModel", "FK_SqlAppointments_SqlAppointments", "SqlAppointments")]
        public SqlAppointment SqlAppointments2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("MeetingSchedulerModel.FK_SqlAppointments_SqlAppointments", "SqlAppointments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("MeetingSchedulerModel.FK_SqlAppointments_SqlAppointments", "SqlAppointments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SqlAppointment> SqlAppointments2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SqlAppointment>("MeetingSchedulerModel.FK_SqlAppointments_SqlAppointments", "SqlAppointments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SqlAppointment>("MeetingSchedulerModel.FK_SqlAppointments_SqlAppointments", "SqlAppointments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MeetingSchedulerModel", Name="UserTeam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserTeam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserTeam object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="user">Initial value of the User property.</param>
        /// <param name="team">Initial value of the Team property.</param>
        public static UserTeam CreateUserTeam(global::System.Int32 id, global::System.String user, global::System.Int32 team)
        {
            UserTeam userTeam = new UserTeam();
            userTeam.id = id;
            userTeam.User = user;
            userTeam.Team = team;
            return userTeam;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, false, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Team
        {
            get
            {
                return _Team;
            }
            set
            {
                OnTeamChanging(value);
                ReportPropertyChanging("Team");
                _Team = StructuralObject.SetValidValue(value, "Team");
                ReportPropertyChanged("Team");
                OnTeamChanged();
            }
        }
        private global::System.Int32 _Team;
        partial void OnTeamChanging(global::System.Int32 value);
        partial void OnTeamChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MeetingSchedulerModel", "FK_UserTeam_Resource", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("MeetingSchedulerModel.FK_UserTeam_Resource", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("MeetingSchedulerModel.FK_UserTeam_Resource", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("MeetingSchedulerModel.FK_UserTeam_Resource", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("MeetingSchedulerModel.FK_UserTeam_Resource", "Resource", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
